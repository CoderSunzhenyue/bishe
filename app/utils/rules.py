import re

# rules.py - 正则表达式规则定义（面向中国检测场景，全面超大规模扩充）
RULE_PATTERNS = {
    # 个人隐私信息
     "个人隐私信息": [
        # === 通信/联系方式 ===
        # 手机号 (中国大陆，更精确)
        re.compile(r"(?<!\d)(?:\+?86[- ]?)?1[3-9]\d{9}(?!\d)"),
        # 座机 (中国大陆，含区号，支持多种分隔符)
        re.compile(r"(?<!\d)0\d{2,3}[- ]?\d{7,8}(?!\d)"),
        # 更通用的国内外电话格式 (放在后面，误报率更高)
        re.compile(r"(?<![\d+])(?:\+?\d{1,5}[- ]?)?(?:(?:\(\d{2,5}\)[- ]?)|(?:\d{2,5}[- ]?))\d{5,10}(?!\d)"),
        # 邮箱地址 (标准格式)
        re.compile(r"\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}\b"),
        # QQ/微信/微博 ID (与关键词结合，放宽对ID格式的要求)
        re.compile(r"(?:QQ|微信|WeChat|微博)号?[:：]?\s*([a-zA-Z0-9_-]{5,30})"), # 捕获组()不影响search匹配
        # 支付账号：支付宝、微信支付、PayPal (与关键词结合)
        re.compile(r"(?:支付宝|微信支付|PayPal)账号[:：]?\s*([A-Za-z0-9._%+-]+(?:@|[\d-]){1,30})"),

        # === 身份标识类 ===
        # 身份证号 (18位，严格校验日期和校验位格式)
        re.compile(r"(?<!\d)[1-9]\d{5}(?:18|19|20)\d{2}(?:0[1-9]|1[0-2])(?:0[1-9]|[12]\d|3[01])\d{3}[0-9Xx](?!\d)"),
        # 身份证号 (15位，简易匹配)
        re.compile(r"(?<!\d)[1-9]\d{5}\d{2}(?:0[1-9]|1[0-2])(?:0[1-9]|[12]\d|3[01])\d{3}(?!\d)"),
        # 护照号 (中国护照：E/G/P/S开头 + 7-8位数字)
        re.compile(r"\b[EGPS]\d{7,8}\b"),
        # 驾驶证/行驶证 (中国格式：1位汉字+12位数字字母)
        re.compile(r"\b[\u4e00-\u9fa5][A-Z0-9]{12}\b"),
        # 军官证/士兵证 (可能需要更复杂的规则，这里是简易匹配)
        re.compile(r"\b字第\s*\d{4,10}号\b(?=军官证|士兵证)"),
        # 出生日期 (与关键词结合，或特定格式，放宽分隔符)
        re.compile(r"(?:出生日期|生日)[:：]?\s*(?:19|20)\d{2}[年\-/.]?(?:0[1-9]|1[0-2])[月\-/.]?(?:0[1-9]|[12]\d|3[01])日?\b"),
        re.compile(r"(?<![\d年月])(?:19|20)\d{2}[年\-/.]?(?:0[1-9]|1[0-2])[月\-/.]?(?:0[1-9]|[12]\d|3[01])日?(?![\d月日])"), # 独立日期格式 (误报率高)
        # 姓名 (与关键词结合，2-4汉字，姓名可能不止2-4字，这里是常见情况)
        re.compile(r"(?:姓名|全名)[:：]?\s*[\u4e00-\u9fa5]{2,10}\b"), # 放宽汉字数量上限
         # 学生证号、学号 (与关键词结合)
        re.compile(r"(?:学生证|学号)[:：]?\s*([0-9A-Za-z-]{5,20})\b"),
         # 工号、员工编号 (与关键词结合)
        re.compile(r"(?:工号|员工编号)[:：]?\s*([0-9A-Za-z-]{2,20})\b"),


        # === 金融/财产类 ===
        # 银行卡号 (主流卡BIN，更精确，支持空格和连接符)
        re.compile(r"(?<!\d)(?:4\d{3}[- ]?\d{4}[- ]?\d{4}[- ]?(?:\d{3}|\d{4})|5[1-5]\d{14}|6(?:011|5\d{2})\d{12}|62\d{14}|6[27]\d{14})(?!\d)"),
        # 银行账户号 (与关键词结合，格式更灵活)
        re.compile(r"(?:银行账户|银行帐号|账号|存折号)[:：]?\s*([0-9\s-]{8,30})\b"),
        re.compile(r"(?:银行卡号|银行卡)[:：]?\s*([0-9\s-]{12,25})\b"), # 明确区分卡号
        # 银行名称关键词
        re.compile(r"(?:中国银行|农业银行|工商银行|建设银行|交通银行|招商银行|浦发银行|中信银行|光大银行|民生银行|兴业银行|广发银行|平安银行|华夏银行)"),
        # 证券/基金账号 (与关键词结合)
        re.compile(r"(?:证券账户|股票账户|基金账户|资金账号)[:：]?\s*([0-9]{6,15})\b"),

        # === 技术/设备标识 ===
        # IP 地址 (IPv4)
        re.compile(r"\b(?:25[0-5]|2[0-4]\d|[01]?\d?\d)(?:\.(?:25[0-5]|2[0-4]\d|[01]?\d?\d)){3}\b"),
        # IP 地址 (IPv6，简易匹配)
        re.compile(r"\b(?:[0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4}\b"),
        re.compile(r"\b(?:[0-9A-Fa-f]{1,4}:){1,7}:(?:[0-9A-Fa-f]{1,4})?\b"), # IPv6 压缩格式简易
        # MAC 地址 (支持多种分隔符)
        re.compile(r"\b(?:[0-9A-Fa-f]{2}[:-]){5}[0-9A-Fa-f]{2}\b"),
        # UUID/GUID (标准格式)
        re.compile(r"\b[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89ABab][0-9a-fA-F]{3}-[0-9a-fA-F]{12}\b"),
        # IMEI (15位数字，有时带分隔符或校验位)
        re.compile(r"\bIMEI[:：]?\s*(\d{14}[\d-]?)\b"),
        # IMSI (15位数字)
        re.compile(r"\bIMSI[:：]?\s*(\d{15})\b"),
        # Android ID (16位16进制)
        re.compile(r"\bAndroid_ID[:：]?\s*([0-9a-fA-F]{16})\b"),
        # 设备序列号 (与关键词结合，格式多样，这里是通用匹配)
        re.compile(r"(?:设备序列号|SN)[:：]?\s*([0-9A-Za-z-]{5,30})\b"),


        # === 位置/地理信息 ===
        # GPS坐标 (经纬度，支持多种格式和分隔符)
        re.compile(r"\b[-+]?\d{1,3}\.\d+[,;]?\s*[-+]?\d{1,3}\.\d+\b"),
        # 详细地址 (与关键词结合，匹配包含省市县等的长字符串)
        re.compile(r"(?:地址|住址|居住地|详细地址|通信地址)[:：]?\s*[\u4e00-\u9fa5]{2,}(?:省|自治区|直辖市|市|区|县|镇|乡|村|街道办事处|社区|路|街|巷|胡同|小区|大厦|栋|楼|单元|号|室)[\u4e00-\u9fa50-9A-Za-z#-]{2,100}\b"),

        # === 医疗/健康类 ===
        # 医疗文档关键词
        re.compile(r"(?:病历|诊断书|体检报告|化验单|检验报告|住院记录|门诊病历|出院小结|处方单)\b"),
        # 医疗相关号码 (病历号、医保号、社保号等，与关键词结合)
        re.compile(r"(?:病历号|医保号|社保号|社保卡号|公积金号)[:：]?\s*([0-9A-Za-z-]{5,30})\b"),

        # === 法律/政府/证书类 ===
        # 统一社会信用代码 / 营业执照注册号
        re.compile(r"(?:统一社会信用代码|注册号|营业执照号)[:：]?\s*([0-9A-Z]{15,18})\b"),
        # 纳税人识别号
        re.compile(r"(?:纳税人识别号|税号)[:：]?\s*([0-9A-Z]{15,20})\b"),
        # 组织机构代码
        re.compile(r"(?:组织机构代码)[:：]?\s*([0-9A-Z]{8}[-][0-9X])\b"),
        # 许可证号/备案号 (与关键词结合，格式多样)
        re.compile(r"(?:许可证号|备案号|证书编号)[:：]?\s*([0-9A-Za-z-]{5,30})\b"),

        # === 凭据/密钥类 (误报率高，谨慎使用或依赖模型判断) ===
        # 密码/口令 (与关键词结合，后面跟任意非空白字符，误报率非常高!)
        # re.compile(r"(?:密码|pass(?:word)?|口令|验证码)[:：]?\s*(\S{4,64})\b"), # 示例，极易误报
        # API Key / Secret (与关键词结合，格式多样，极易误报)
        # re.compile(r"(?:API_Key|Secret|密钥)[:：]?\s*([0-9A-Za-z+/=]{16,128})\b"), # 示例，极易误报

        # === 其他/通用关键词 ===
        # 快递单号/运单号 (数字字母串 + 后向肯定关键词)
        re.compile(r"\b[0-9A-Za-z]{8,20}\b(?=.*(?:快递|运单|物流))", re.IGNORECASE), # 长度放宽，后向肯定关键词
        # 订单号 (与关键词结合，格式多样，极易误报)
        re.compile(r"(?:订单号|订单编号)[:：]?\s*([0-9A-Za-z-]{5,30})\b"),
        # 敏感操作关键词 (指示文本可能包含披露 PII 的行为)
        re.compile(r"(?:查询|获取|提供|泄露|公开|上传|导出)(?:我的|他人|用户)的?(?:信息|资料|数据|记录|隐私|账户|联系方式|号码|地址|身份)")

    ],
    # 黄色信息
    "黄色信息": [
        # 中文常见性/色情词汇
        re.compile(r"性交|性欲|色情|黄色影视|成人电影|私密直播|裸聊|裸露|露点|露胸|艳照|强奸|猥亵|卖淫|嫖娼|援交|约啪|激情视频"),
        # 身体裸露部位
        re.compile(r"裸照|性器官|阴茎|阴道|乳房|臀部|下体|生殖器|私处|阴蒂"),
        # 性行为
        re.compile(r"口交|肛交|手淫|自慰|性交|乱伦|兽交|恋童|SM|BDSM|捆绑|调教"),
        # 色情小说/小黄文
        re.compile(r"色情小说|黄色小说|小黄文|肉文|情色故事|成人小说"),
        # 成人网站链接
        re.compile(r"(?i)https?://[\w\-]+\.(?:porn|xxx|adult|sex|erotic|gif)\S*"),
        # AV 番号（日、韩、欧美）
        re.compile(r"\b[A-Z]{2,4}-?\d{3,7}\b"),
        # 色情漫画/动漫
        re.compile(r"里番|hentai|成年漫画|成人漫画"),
        # SM/枷锁/支配
        re.compile(r"(?i)BDSM|fetish|bondage|spanking|dominance|discipline"),
        # 色情标签/分类
        re.compile(r"(?i)色情图片|黄色视频|成人片|艳舞"),
    ],

    # 不良有害信息
    "不良有害信息": [
        # 暴力与血腥描述
        re.compile(r"杀人|谋杀|砍人|爆炸|血腥|分尸|虐杀|活埋|斩首|割喉|绞刑|虐待儿童|虐童|家暴|校园暴力|街头斗殴"),
        # 武器与极端组织
        re.compile(r"枪支|炸药|手榴弹|管制刀具|自制炸弹|恐怖袭击|恐怖组织|ISIS|基地组织|Taliban|圣战|极端主义"),
        # 犯罪行为
        re.compile(r"绑架|勒索|抢劫|偷窃|盗窃|诈骗|电信诈骗|网络诈骗|金融诈骗|传销|非法集资|洗钱|地下钱庄|高利贷"),
        # 网络攻击/黑客行为
        re.compile(r"(?i)DDoS|SQL injection|XSS|cross-site scripting|钓鱼网站|木马|病毒|黑客工具|渗透测试|后门"),
        # 毒品与化学违禁品
        re.compile(r"(?i)冰毒|海洛因|可卡因|摇头丸|K粉|芬太尼|甲基安非他明|毒品交易|制毒|毒品配方"),
        # 生化与化学武器
        re.compile(r"生化武器|毒气|神经毒剂|生物毒素|细菌武器"),
        # 自残/自杀
        re.compile(r"自残|自虐|自杀|割腕|跳楼|服毒|上吊|轻生|自杀倾向"),
        # 虐待与酷刑
        re.compile(r"酷刑|水刑|电刑|拷打|折磨|虐囚"),
        # 黑社会/组织犯罪
        re.compile(r"黑社会|帮派|组织犯罪|黑手党|黑道"),
        # 恐怖主义言论
        re.compile(r"(?i)jihad|holy war|caliphate|民族清洗|恐怖主义"),
        # 诽谤/威胁/恐吓
        re.compile(r"威胁|恐吓|扬言要|谋害|诽谤|污蔑|恐惧"),
        # 宣扬仇恨言论
        re.compile(r"(?:灭亡|消灭|驱逐)#[\u4e00-\u9fa5A-Za-z0-9]+"),
        # 极端政治煽动
        re.compile(r"(?:打倒|结束)现政权|武装起义|暴动"),
    ],
}

